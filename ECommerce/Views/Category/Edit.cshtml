@model ECommerce.Models.CategoryVM

@{
    ViewData["Title"] = "Edit";
    AttributeVM a = new AttributeVM
            {
                Description = "Description-Example",
                Name = "Name-Example",
                Required = true,
                Id = -1
            };
    ValueTypeVM vt = new ValueTypeVM
    {
Name = "Name-Value-Example" ,
Type= "Int",
Id = -1 
    };
    a.ValueType = vt;
}




<style>
    * {
        border-radius: 0 !important;
    }

    #field,.margin_b {
        margin-bottom: 10px;
    }

    .submit_btn{
        width: 150px !important;
        font-size: 16pt;
    }
    
    .save_btn{
        width: 30% !important;
    }

    .add_atter_btn{
        width: 80%;
    }
    
    .add_atter_btn,.submit_btn{
        font-size: 16pt !important;
        user-select: none !important;
    }
    
    .add_file_btn{
        height:60px !important;
    }

    .add_file_btn::file-selector-button {
        font-weight: bold;
        padding: 0.5em;
        border: thin solid grey;
        border-radius: 3px;
    }

    .atter{
        position:relative;
        margin-top: 35px;
        border: 1px solid purple;
        border-radius: 25px !important;
        justify-content: center;
        align-items:center;
        display: flex;
        flex-direction: column;
        padding: 40px;
    }

    .input_text{
        margin:10px 0;
        display: flex;
        justify-content:space-between;
        align-items:center;
        width:80%;
    }

    .delete_btn{
        position:absolute;
        right: 30px;
        top: -25px;
    }

    .atter input,.atter select{
        height:40px !important;
        width: 70%;
    }

    #val{
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        max-width: 80%;
    }

</style>

               
<script>
    console.log('hrllo');

    let index = 0;
    let base_form;
    $(document).ready(function() {
         
        console.log('hrllo');

        base_form = document.getElementById('form-idBASE').outerHTML;

        $('.atter-temp').each(function (idx) {
            console.log('test :)');
            $(this).attr('id', 'atter-' + (++index));
            $(this).find('#del-id').attr('id', 'del-' + index);
            $(this).find('#save-id').attr('id', 'save-' + index);
            var t = $(this);
            $form = $("<form action='/Category/AssignAttribute' method='post' id='form-" + index + "'></form>");
            $form.append(t) ;
            $("#container").append($form) ;
            $(this).find('#save-' + index).click(function() {
                $('#form-' + index).each(function () {
                    console.log($(this).serializeArray())
                    $.ajax({
                        url: this.action,
                        type: this.method,
                        data: $(this).serialize(),
                        success: function (result) {
                            console.log(result);
                        },
                        error: function (xhr, textStatus, error) {
                            console.log(xhr.statusText);
                            console.log(textStatus);
                            console.log(error);
                        }
                    });
                });
            });

        });

        console.log('ft'+index);
        $('#image_input').find('#image').click(function(){
            $("#image_input input[type='file']").trigger('click');
        })

        $("#image_input").find("input[type='file']").change(function(){
            $('#image_input #val').text(this.value.replace(/C:\\fakepath\\/i, ''))
        })    
        
         $("#image_input")
                .find("#val")
                .text("@Html.Raw(Model.ImageUrl)")
        
        
        $('#add_atter').click(function(){
            
            let cpy = base_form.replaceAll('idBASE', '' + (++ index));
            $("#container").append(cpy);
            $('#save-' + index).click(function () {
                $('#form-' + index).each(function () {
                    console.log($(this).serializeArray())
                    $.ajax({
                        url: this.action,
                        type: this.method,
                        data: $(this).serialize(),
                        success: function (result) {
                            console.log(result);
                        },
                        error: function (xhr, textStatus, error) {
                            console.log(xhr.statusText);
                            console.log(textStatus);
                            console.log(error);
                        }
                    });
                });
            });

            //$('#container').append(div);

            //$('#atter-' + index).find('input[type="hidden"]').remove();

            //$('#del-idBASE').click(function () {
            //    id = $(this).attr('id');
            //    id = id.substr(4, id.length - 4);
            //    console.log(id);
            //    $('#atter-idBASE').remove();
            //})

            //$('#save-idBAS').click(function() {
            //    id = $(this).attr('id');
            //    id = id.substr(5, id.length - 5);

            //    $('#form-idBASE').each(function () {
            //        console.log(this)
            //        console.log($(this).serializeArray())
            //        $.ajax({
            //            url: this.action,
            //            type: this.method,
            //            data: $(this).serialize(),
            //            success: function (result) {
            //                console.log(result);
            //            },
            //            error: function(xhr, textStatus, error){
            //                console.log(xhr.statusText);
            //                console.log(textStatus);
            //                console.log(error);
            //            }
            //        });
            //    });
            //})
            //index++;
        })
    
    })    

</script>




<h1 class="mt-3">Edit Category</h1>

<hr />

<div class="container">
    
    <div class="row">
        <input type="hidden" name="count" value="1" />
        <div class="control-group" id="fields">
            <div class="controls" id="profs">

                <form asp-action="Edit" class="input-append col-12 d-flex" style="flex-direction:column">

                    <div class="row d-flex align-items-baseline">
                        <div id="field11" class="d-flex justify-content-center col-6" style="flex-direction:column">

                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="form-group">
                                <label asp-for="Name" class="col-form-label mt-4"></label>
                                <input asp-for="Name" class="form-control" />
                                <span asp-validation-for="Name" class="text-danger"></span>
                            </div>

                            <div class="form-group">
                                <label asp-for="Description" class="col-form-label mt-4"></label>
                                <input asp-for="Description" class="form-control" />
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>

                            <div class="form-group" id="image_input">
                                <label asp-for="ImageUrl" class="col-form-label mt-4"></label>
                                <input asp-for="ImageUrl" type="file" id="Image_url" 
                                    class="form-control add_file_btn" hidden>
                                <div class="d-flex align-items-center">
                                    <div id='image' class="btn btn-outline-primary rounded">Select File</div>
                                    <div id='val' style="margin-left:10px"></div>
                                </div>
                                <span asp-validation-for="ImageUrl" class="text-danger"></span>
                            </div>
                        </div>

                        <div id="field0" class="d-flex justify-content-center align-items-center col-6" style="flex-direction:column">
                            <div id="add_atter" class="btn btn-primary rounded add_atter_btn">
                                <i class="bi bi-plus-circle-fill"></i> Add Attribute
                            </div>
                            <div id="container" class="container">

                                    @for (var i = 0 ; i <Model.Attributes.Count; i ++){
                                    <div class="atter atter-temp" id="atter-id" action="/Category/Edit" method="post">
                                        <form class="atter atter-temp" id="atter-id">
                                                <div class="input_text">
                                                    <label class="col-form-label">attribute name:</label>
                                                @Html.TextBox("Name",Model.Attributes[i].Name, new { @class = "form-control",placeholder="name of the attribute" })
                                                </div>
                                                <div class="input_text">
                                                    <label class="col-form-label">attribute description:</label>
                                                @Html.TextArea("Description",Model.Attributes[i].Description, new { @class = "form-control",placeholder="name of the attribute" })
                                                </div>

                                                <div class="input_text">
                                                    <label class="col-form-label">attribute Type:</label>
                                                @Html.DropDownList("ValueType.Type",
                                                new SelectList(Enum.GetValues(typeof(ValueTypeEnum))), Model.Attributes[i].ValueType.Type == null ? "Select Type" : Model.Attributes[i].ValueType.Type,
                                                new{@class="form-control"})
                                                </div>

                                                <div class="input_text">
                                                    <label class="col-form-label">attribute unit:</label>
                                                @Html.TextBox("ValueType.Name", Model.Attributes[i].ValueType.Name,
                                                new { @class = "form-control",placeholder="can be empty" })
                                                </div>

                                                <div class="input_text">
                                                    @Html.Label("Required","Required:",new {@class="col-form-label"})
                                                    @Html.CheckBox(Model.Attributes[i].Required ? "T" : "F", Model.Attributes[i].Required
                                                ,new {@class="form-check-input", style="width:42px; "})
                                                </div>

                                                <div id="del-id" class="fonts delete_btn btn btn-danger rounded"> <i class="bi bi-trash3"></i> delete</div>

                                                <div id="save-id" class="fonts save_btn btn btn-outline-primary rounded"> <i class="bi bi-save"></i> Save</div>
                                           </form> </div>
                                }
                                <form action='/Category/AssignAttribute' method='post' id="form-idBASE">
                                    <div class="atter" >

                                        <div class="input_text">
                                            <label class="col-form-label">attribute name:</label>
                                            @Html.TextBox("Name",a.Name, new { @class = "form-control",placeholder="name of the attribute" })
                                        </div>
                                          <div class="input_text">
                                                    <label class="col-form-label">attribute description:</label>
                                                @Html.TextArea("Description",a.Description, new { @class = "form-control",placeholder="name of the attribute" })
                                                </div>
                                        <div class="input_text">
                                            <label class="col-form-label">attribute Type:</label>S
                                            @Html.DropDownList("ValueType.Type",
                                            new SelectList(Enum.GetValues(typeof(ValueTypeEnum))), a.ValueType.Type == null ? "Select Type" : a.ValueType.Type,
                                            new{@class="form-control"})
                                        </div>

                                        <div class="input_text">
                                            <label class="col-form-label">attribute unit:</label>
                                            @Html.TextBox("ValueType.Name", a.ValueType.Name,
                                            new { @class = "form-control",placeholder="can be empty" })
                                        </div>

                                        <div class="input_text">
                                            @Html.Label("Required","Required:",new {@class="col-form-label"})
                                            @Html.CheckBox(a.Required ? "T" : "F", a.Required
                                            ,new {@class="form-check-input", style="width:42px; "})
                                        </div>

                                        <div id="del-idBASE" class="fonts delete_btn btn btn-danger rounded"> <i class="bi bi-trash3"></i> delete</div>

                                        <div id="save-idBASE" class="fonts save_btn btn btn-outline-primary rounded"> <i class="bi bi-save"></i> Save</div>
                                    </div>
                                    </form>

                            </div>
                        </div>
                    </div>

                    <div class="form-group d-flex justify-content-center">
                        <input type="submit" value="Save" class="btn btn-primary rounded submit_btn mt-3" />
                    </div>
                </form>
   
                <br>
            </div>
        </div>
    </div>
</div>


<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
