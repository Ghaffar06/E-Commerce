@model ECommerce.Models.OrderVM

@{
    ViewData["Title"] = "Order Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
	#home_bread:after{
		left:50px;
	}
	#order_bread:after{
		left:124px;
	}
	#cart_items .cart_info{
		border: none;
	}
	.spacer{
		height: 10px;
	}
	.w80{ 
		margin-left:125px;
		width:100px;
	}
	#cart_bread:after{
		left:525px;
		top:10px;
	}
	.butn{
		margin-left:465px;
		font-size:14pt; 
	}
	.butn2{
		margin-left:485px;
		font-size:14pt; 
	}
	.butn3{
		margin-left:540px;
		font-size:14pt; 
	}
	#cart_bread{
		padding:10px 30px;
	}
</style>
<div class="container">
	<div class="row">
		<div class="breadcrumbs" style="margin-bottom: -50px">
			<ol class="breadcrumb">
				<li><a id="home_bread" asp-controller="home" asp-action="index">Home</a></li>
				@if(User.IsInRole("Deliverer")){
					<li><a id="order_bread" asp-controller="order" asp-action="Accepted">Orders</a></li>
				}
				else
				{
					<li><a id="order_bread" asp-controller="order" asp-action="Requested">Orders</a></li>
				}
				<li class="active">Order Details</li>
			</ol>
		</div>
		<h1>All Details For Order</h1>
		<hr />
		
		<div class="spacer"></div>
		<section id="cart_items">
			<div class="container">
				<div class="table-responsive cart_info">
					<table id="table" class="table table-condensed">
						<thead>
							<tr class="cart_menu">
								<td class="image">Item</td>
								<td class="description"></td>
								<td class="price">Price</td>
								<td class="quantity">Quantity</td>
								<td class="units">Units</td>
								<td class="total">Total</td>
								<td class="notes">Notes</td>
							</tr>
						</thead>
						<tbody>
							@foreach (var item in Model.OrderProduct) {
								<tr>
									<td class="cart_product">
										<a asp-controller="product" asp-action="details" asp-route-id="@item.ProductId">
											<img src="~/@item.Product.ImageUrl" height="150" width="150" alt="">
										</a>
									</td>

									<td class="cart_description" >
										<h4 style="margin-left:10px">
											<a asp-controller="product" asp-action="details" asp-route-id="@item.ProductId">
												@item.Product.Name
											</a>
										</h4>
										<p style="margin-left:10px">@item.Product.Description</p>
									</td>
									<td class="cart_price">
										<p>$@item.Product.Price</p>
									</td>
									<td class="cart_quantity">
										<div class="quan">
											<input name="quantity" autocomplete="off" 
												style="width:80px;height:33px;margin:0"
												type="number" value ="@item.Quantity" disabled>
											<input name="prod_id" type="number" value="@item.ProductId" 
												style="display:none" hidden readonly>
										</div>
									</td>
									<td class="cart_unit">
										<p class="cart_units">@item.Product.Unit</p>
									</td>
									<td class="cart_total">
										<p class="cart_total_price" id="tot-@item.ProductId">
											@{
												double result = item.Quantity * item.Product.Price;
																@:$ @result  
											}
										</p>
									</td>
									<td>
										<textarea id="not-@item.ProductId" rows="5" value="@item.Notes"
											placeholder="Feel free to add some Notes">@item.Notes</textarea>
										<script>
											$('#not-@item.ProductId').on('keyup',function(e){
                                                var id = $(this).attr('id').substr(4);
												$('#nid-' + id).val($(this).val());
											});
										</script>
									</td>
								</tr>
							}
						</tbody>
					</table>
				</div>
				<div class="col-12" style="font-size:16pt">
					<div asp-validation-summary="ModelOnly" class="text-danger"></div>
					@for(var i= 0; i < Model.OrderProduct.Count; i++){
						@Html.EditorFor(model => model.OrderProduct[i].ProductId , 
							new { htmlAttributes = new { @class = "form-control", style="display:none;" }})
						@Html.EditorFor(model => model.OrderProduct[i].Quantity , 
							new { htmlAttributes = new { @class = "form-control", style="display:none;" }})
						@Html.EditorFor(model => model.OrderProduct[i].Notes , 
							new { htmlAttributes = new { @class = "form-control", 
								@id="nid-" + @Model.OrderProduct[i].ProductId, style="display:none;" } })
					}
					@if (User.IsInRole("Customer"))
					{
						<div class="form-group">
							<label class="col-form-label mt-4" for="DelivererId">Deliverer Id: </label>
							@Html.DisplayFor(modelItem => modelItem.DelivererId)
							<span asp-validation-for="DelivererId" class="text-danger"></span>
						</div>
					}
					@if (User.IsInRole("Deliverer"))
					{
						<div class="form-group">
							<label class="col-form-label mt-4" for="CustomerId">Customer Id: </label>
							@Html.DisplayFor(modelItem => modelItem.CustomerId)
							<span asp-validation-for="CustomerId" class="text-danger"></span>
						</div>
					}
					<div class="form-group">
						<label class="col-form-label mt-4" for="TotalPrice">Total Price: </label>
						@Html.DisplayFor(modelItem => modelItem.TotalPrice)
						<span asp-validation-for="TotalPrice" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="CreatedAt" class="control-label">Created At: </label>
						@Html.DisplayFor(modelItem => modelItem.CreatedAt)
						<span asp-validation-for="CreatedAt" class="text-danger"></span>
					</div>
					<div class="form-group">
						<label asp-for="Address" class="control-label">Address:</label>
						@Html.DisplayFor(modelItem => modelItem.Address)
						<span asp-validation-for="Address" class="text-danger"></span>
					</div>
					@for(var status = 0; status < Model.OrderStatus.Count; status++)
					{
						<div style="display:flex;width:1000px">
							<div class="form-group">
								<label asp-for="OrderStatus[status].State" class="control-label">State:</label>
								@Html.DisplayFor(modelItem => modelItem.OrderStatus[status].State)
								<span asp-validation-for="OrderStatus[status].State" class="text-danger"></span>
							</div>
							<div class="form-group" style="margin-left:30px">
								<label asp-for="OrderStatus[status].Note" class="control-label">Note:</label>
								@Html.DisplayFor(modelItem => modelItem.OrderStatus[status].Note)
								<span asp-validation-for="OrderStatus[status].Note" class="text-danger"></span>
							</div>
						</div>
					}
					@if (User.IsInRole("Deliverer") && @Model.DelivererId != null)
					{
						<div class="container">
							<div class="row">
								<form asp-controller='order' asp-action='AddStatusNote' 
									method="post" id="add" >
									<input style='display:none' type="text" name="Id" value="@Model.Id">
									<div class="form-group">
										<label for="Description" class="form-label mt-4">Note:</label>
										<textarea name="note" class="form-control" id="Description" 
											rows="4" placeholder="Type your Note here..."></textarea>
									</div>
								</form>
								<button class="order_rg btn btn-primary rounded butn3" id="addnote"
									style="margin-bottom:30px">Add Note</button>
						
								<script>
									$('#addnote').on('click',function(e){
										$('#add').submit();
									});
								</script>
							</div>
						</div>
					}
					@if (User.IsInRole("Deliverer") && @Model.DelivererId != null)
					{
						<div class="container">
							<div class="row">
								<button class="order_rg btn btn-primary rounded butn2" id="deliver"
									style="margin-bottom:30px">Deliver to the Customer</button>
								<form asp-controller='order' asp-action='Delivered' 
									method="post" id="acc" style='display:none'>
									<input type="text" name="Id" value="@Model.Id">
								</form>
								<script>
									$('#deliver').on('click',function(e){
										var id = $(this).attr('id').substr(9)
										console.log(id);
										$('#acc').submit();
									});
								</script>
							</div>
						</div>
					}
				</div>
			</div>
		</section>
	</div>
</div>

<div class="container">
	<div class="breadcrumbs" style="margin-bottom: -50px">
		<ol class="breadcrumb">
			<li class="butn ml-3">
				<a id="cart_bread" asp-controller="order" asp-action="AcceptedOrder">Back to Accepted Orders</a>
			</li>
		</ol>
	</div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
